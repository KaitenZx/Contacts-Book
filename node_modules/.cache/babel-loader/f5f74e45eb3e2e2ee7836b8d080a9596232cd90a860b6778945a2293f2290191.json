{"ast":null,"code":"var _jsxFileName = \"/Users/kaiten/prgmStuff/contacts-book/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AddContactModal from './components/AddContactModal';\nimport { v4 as uuidv4 } from 'uuid';\nimport style from './styles/App.module.scss';\nimport { getContacts, saveToLocalStorage, sortContacts } from './utils/contactsUtils';\nimport ContactsList from './components/ContactsList';\nimport Headline from './components/Headline';\nimport { LABELS_KEYS } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingId, setEditingId] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [sortField, setSortField] = useState();\n  const [isAscending, setIsAscending] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    const storageContacts = getContacts();\n    setContacts(storageContacts);\n    if (storageContacts.length === 0) {\n      setShowForm(true);\n    }\n  }, []);\n  const saveContact = newContact => {\n    if (newContact.id) {\n      const updatedContacts = contacts.map(contact => contact.id === newContact.id ? newContact : contact);\n      setContacts(updatedContacts);\n      saveToLocalStorage(updatedContacts);\n      setEditingId(\"\");\n    } else {\n      const id = uuidv4();\n      setContacts([...contacts, {\n        ...newContact,\n        id\n      }]);\n      saveToLocalStorage([...contacts, {\n        ...newContact,\n        id\n      }]);\n    }\n  };\n  const editContact = id => {\n    setEditingId(id);\n  };\n  const deleteContact = id => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this contact?');\n    if (confirmDelete) {\n      const updatedContacts = contacts.filter(contact => contact.id !== id);\n      setContacts(updatedContacts);\n      saveToLocalStorage(updatedContacts);\n    }\n  };\n  const handleSortFieldChange = field => {\n    setContacts(sortContacts(contacts, field, isAscending));\n    setIsAscending(!isAscending);\n    setSortField(field);\n  };\n  const filteredContacts = contacts.filter(contact => Object.values(contact).some(contactField => contactField.toLowerCase().includes(searchQuery.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.headerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.header,\n        children: \"Contacts Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.searchInput,\n        type: \"text\",\n        placeholder: \"Search contacts...\",\n        value: searchQuery,\n        onChange: event => setSearchQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.addButton,\n        onClick: () => setShowForm(true),\n        children: \"Add a new contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.separator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.headlines,\n      children: [LABELS_KEYS.map(label => /*#__PURE__*/_jsxDEV(Headline, {\n        label: label,\n        currentSortField: sortField,\n        onClick: () => handleSortFieldChange(label),\n        isAscending: isAscending\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(AddContactModal, {\n      contactsEmpty: contacts.length === 0,\n      setShowForm: setShowForm,\n      saveContact: saveContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n      contacts: filteredContacts,\n      editingId: editingId,\n      editContact: editContact,\n      saveContact: saveContact,\n      deleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TFb/p6DUcppAYs5xCt0IAAg3WJs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","AddContactModal","v4","uuidv4","style","getContacts","saveToLocalStorage","sortContacts","ContactsList","Headline","LABELS_KEYS","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingId","setEditingId","showForm","setShowForm","sortField","setSortField","isAscending","setIsAscending","searchQuery","setSearchQuery","storageContacts","length","saveContact","newContact","id","updatedContacts","map","contact","editContact","deleteContact","confirmDelete","window","confirm","filter","handleSortFieldChange","field","filteredContacts","Object","values","some","contactField","toLowerCase","includes","className","container","children","headerContainer","header","fileName","_jsxFileName","lineNumber","columnNumber","searchInput","type","placeholder","value","onChange","event","target","addButton","onClick","separator","headlines","label","currentSortField","contactsEmpty","_c","$RefreshReg$"],"sources":["/Users/kaiten/prgmStuff/contacts-book/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AddContactModal from './components/AddContactModal';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Contact, LabelsKey } from './utils/types';\nimport style from './styles/App.module.scss'\nimport { getContacts, saveToLocalStorage, sortContacts } from './utils/contactsUtils';\nimport ContactsList from './components/ContactsList';\nimport Headline from './components/Headline';\nimport { LABELS_KEYS } from './utils/constants';\n\nconst App: React.FC = () => {\n  const [contacts, setContacts] = useState<Contact[]>([]);\n  const [editingId, setEditingId] = useState(\"\");\n  const [showForm, setShowForm] = useState<boolean>(false);\n  const [sortField, setSortField] = useState<LabelsKey>();\n  const [isAscending, setIsAscending] = useState<boolean | undefined>()\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  useEffect(() => {\n    const storageContacts = getContacts()\n    setContacts(storageContacts)\n    if (storageContacts.length === 0) {\n      setShowForm(true);\n    }\n  }, [])\n\n  const saveContact = (newContact: Contact) => {\n    if (newContact.id) {\n      const updatedContacts = contacts.map(contact =>\n        contact.id === newContact.id ? newContact : contact\n      );\n      setContacts(updatedContacts);\n      saveToLocalStorage(updatedContacts)\n      setEditingId(\"\");\n    } else {\n      const id = uuidv4()\n      setContacts([...contacts, { ...newContact, id }]);\n      saveToLocalStorage([...contacts, { ...newContact, id }])\n    }\n  };\n\n  const editContact = (id: string) => {\n    setEditingId(id);\n  };\n\n  const deleteContact = (id: string) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this contact?');\n    if (confirmDelete) {\n      const updatedContacts = contacts.filter(contact => contact.id !== id)\n      setContacts(updatedContacts);\n      saveToLocalStorage(updatedContacts);\n    }\n  };\n\n  const handleSortFieldChange = (field: LabelsKey) => {\n    setContacts(sortContacts(contacts, field, isAscending))\n    setIsAscending(!isAscending)\n    setSortField(field)\n  }\n\n  const filteredContacts = contacts.filter(contact =>\n    Object.values(contact).some((contactField: string) =>\n      contactField.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n\n  return (\n    <div className={style.container}>\n      <div className={style.headerContainer}>\n        <div className={style.header}>Contacts Book</div>\n        <input\n          className={style.searchInput}\n          type=\"text\"\n          placeholder=\"Search contacts...\"\n          value={searchQuery}\n          onChange={event => setSearchQuery(event.target.value)}\n        />\n        <button className={style.addButton} onClick={() => setShowForm(true)}>Add a new contact</button>\n      </div>\n\n      <div className={style.separator} />\n\n      <div className={style.headlines}>\n        {LABELS_KEYS.map((label) => (\n          <Headline\n            key={label}\n            label={label}\n            currentSortField={sortField}\n            onClick={() => handleSortFieldChange(label)}\n            isAscending={isAscending}\n          />\n        ))}\n        <div className={style.placeholder} />\n      </div>\n\n      {showForm && (\n        <AddContactModal contactsEmpty={contacts.length === 0} setShowForm={setShowForm} saveContact={saveContact} />\n      )}\n\n      <ContactsList\n        contacts={filteredContacts}\n        editingId={editingId}\n        editContact={editContact}\n        saveContact={saveContact}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}