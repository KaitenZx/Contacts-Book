{"ast":null,"code":"var _jsxFileName = \"/Users/kaiten/prgmStuff/contacts-book/src/components/CountryDropdown.tsx\";\nimport React from 'react';\nimport { getNames } from 'country-list';\nimport style from \"../styles/CountryDropdown.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDropdown = _ref => {\n  let {\n    value,\n    onChange,\n    isEditing\n  } = _ref;\n  const countriesList = getNames();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.label,\n      children: \"Country: *\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: isEditing ? style.select : style.formSelect,\n      value: value,\n      onChange: onChange,\n      required: true,\n      \"data-testid\": \"countrySelect\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), countriesList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country,\n        children: country\n      }, country, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = CountryDropdown;\nexport default CountryDropdown;\nvar _c;\n$RefreshReg$(_c, \"CountryDropdown\");","map":{"version":3,"names":["React","getNames","style","jsxDEV","_jsxDEV","CountryDropdown","_ref","value","onChange","isEditing","countriesList","className","container","children","label","fileName","_jsxFileName","lineNumber","columnNumber","select","formSelect","required","map","country","_c","$RefreshReg$"],"sources":["/Users/kaiten/prgmStuff/contacts-book/src/components/CountryDropdown.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { getNames } from 'country-list';\nimport style from \"../styles/CountryDropdown.module.scss\"\n\ninterface SelectCountryProps {\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  isEditing?: boolean\n}\n\nconst CountryDropdown: FC<SelectCountryProps> = ({ value, onChange, isEditing }) => {\n\n  const countriesList = getNames();\n\n  return (\n    <div className={style.container} >\n      {!isEditing && <div className={style.label}>Country: *</div>}\n      <select className={isEditing ? style.select : style.formSelect} value={value} onChange={onChange} required data-testid=\"countrySelect\">\n        <option value=\"\">Select country</option>\n        {countriesList.map((country) => (\n          <option key={country} value={country}>{country}</option>\n        ))}\n      </select>\n    </div>\n\n  );\n};\n\nexport default CountryDropdown;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,KAAK,MAAM,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQzD,MAAMC,eAAuC,GAAGC,IAAA,IAAoC;EAAA,IAAnC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAE7E,MAAMI,aAAa,GAAGT,QAAQ,CAAC,CAAC;EAEhC,oBACEG,OAAA;IAAKO,SAAS,EAAET,KAAK,CAACU,SAAU;IAAAC,QAAA,GAC7B,CAACJ,SAAS,iBAAIL,OAAA;MAAKO,SAAS,EAAET,KAAK,CAACY,KAAM;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5Dd,OAAA;MAAQO,SAAS,EAAEF,SAAS,GAAGP,KAAK,CAACiB,MAAM,GAAGjB,KAAK,CAACkB,UAAW;MAACb,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACa,QAAQ;MAAC,eAAY,eAAe;MAAAR,QAAA,gBACpIT,OAAA;QAAQG,KAAK,EAAC,EAAE;QAAAM,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvCR,aAAa,CAACY,GAAG,CAAEC,OAAO,iBACzBnB,OAAA;QAAsBG,KAAK,EAAEgB,OAAQ;QAAAV,QAAA,EAAEU;MAAO,GAAjCA,OAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGV,CAAC;AAACM,EAAA,GAhBInB,eAAuC;AAkB7C,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}